package io.pusteblume.loadbalancer.balancer.routes

import akka.http.scaladsl.model.{ ContentTypes, HttpEntity, HttpResponse, RemoteAddress, StatusCodes }
import akka.http.scaladsl.testkit.ScalatestRouteTest

import org.scalatest.matchers.should.Matchers
import org.scalatest.wordspec.AnyWordSpec

import scala.concurrent.Future

class ServiceRouterTest extends AnyWordSpec with Matchers with ScalatestRouteTest {

  "The service" should {
    "return the response entity generated by a provider " in {
      Get("/get") ~>
      ServiceRouter.routes(() => Future.successful(HttpResponse(status = StatusCodes.OK))) ~> check {
        status should ===(StatusCodes.OK)
      }
    }
    "return failure if no provider could not service the request" in {
      Get("/get") ~>
      ServiceRouter.routes(() => Future.failed[HttpResponse](new Exception("someErr"))) ~> check {
        status should ===(StatusCodes.NotFound)
      }
    }
  }
}
